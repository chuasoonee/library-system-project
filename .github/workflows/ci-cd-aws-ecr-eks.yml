name: AWS ECR & EKS CI/CD

on:
  push:
    branches:
      - staging
      #- main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Run Unit Tests
        run: mvn clean install || echo "Unit Tests failed!"
        continue-on-error: false

      # Configure AWS Credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-5  # Change to your AWS region

      # Login to AWS ECR
      - name: Login to AWS ECR
        id: ecr-login
        run: |
          aws ecr get-login-password --region ap-southeast-5 | docker login --username AWS --password-stdin ${{ secrets.ECR_REPO }}

      # Build & Push to AWS ECR (Staging)
      - name: Build & push Docker image for Staging
        if: github.ref == 'refs/heads/staging'
        run: |
          docker build -t library-system -f Dockerfile-staging .
          docker tag library-system ${{ secrets.ECR_REPO_STAGING }}:${{ github.sha }}
          docker push ${{ secrets.ECR_REPO_STAGING }}:${{ github.sha }}
          
      # Build & Push to AWS ECR (Production)
      #- name: Build & push Docker image for Production
      #  if: github.ref == 'refs/heads/main'
      #  run: |
      #    docker build -t library-system -f Dockerfile-staging .
      #    docker tag library-system ${{ secrets.ECR_REPO_PRODUCTION }}:${{ github.sha }}
      #    docker push ${{ secrets.ECR_REPO_STAGING }}:${{ github.sha }}

      # Install kubectl
      - name: Install kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'v1.32.0' # eks version
        id: install
        
      - name: Update kube config
        run: |
          aws eks update-kubeconfig --region ap-southeast-5 --name ${{ secrets.EKS_CLUSTER_STAGING }}
          kubectl config set-context --current --namespace=staging

      # Apply Kubernetes Deployment & Service for Staging
      - name: Deploy to Kubernetes (Staging)
        if: github.ref == 'refs/heads/staging'
        run: |
          kubectl apply -f k8s/staging/service.yaml
          export IMAGE=${{ secrets.ECR_REPO_STAGING }}:${{ github.sha }}
          envsubst < k8s/staging/deployment.yaml | kubectl apply -f -
          
      # Apply Kubernetes Deployment & Service for Production
      #- name: Deploy to Kubernetes (Production)
      #  if: github.ref == 'refs/heads/main'
      #  run: |
      #    kubectl apply -f k8s/prod/service.yaml
      #    export IMAGE=${{ secrets.ECR_REPO_PRODUCTION }}:${{ github.sha }}
      #    envsubst < k8s/prod/deployment.yaml | kubectl apply -f -
